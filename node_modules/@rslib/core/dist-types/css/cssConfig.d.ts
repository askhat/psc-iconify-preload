import type { CSSLoaderOptions, EnvironmentConfig } from '@rsbuild/core';
export declare const RSLIB_CSS_ENTRY_FLAG = "__rslib_css__";
export type CssLoaderOptionsAuto = CSSLoaderOptions['modules'] extends infer T ? T extends {
    auto?: any;
} ? T['auto'] : never : never;
export declare function isCssFile(filepath: string): boolean;
export declare function parsePathQueryFragment(str: string): {
    path: string;
    query: string;
    fragment: string;
};
export declare function isCssModulesFile(filepath: string, auto: CssLoaderOptionsAuto): boolean;
export declare function isCssGlobalFile(filepath: string, auto: CssLoaderOptionsAuto): boolean;
type ExternalCallback = (arg0?: undefined, arg1?: string) => void;
export declare function cssExternalHandler(request: string, callback: ExternalCallback, jsExtension: string, auto: CssLoaderOptionsAuto, styleRedirectPath: boolean, styleRedirectExtension: boolean, redirectPath: (request: string) => Promise<string | undefined>, issuer: string): Promise<false | void>;
export declare const composeCssConfig: (rootDir: string | null, auto: CssLoaderOptionsAuto, bundle?: boolean, banner?: string, footer?: string) => EnvironmentConfig;
export {};
